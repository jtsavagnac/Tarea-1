{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "32d44cda",
   "metadata": {},
   "source": [
    "## Distribución Normal o Gaussiana\n",
    "En este documento se generaran numeros aleatorios que siguen una distribucion normal, posteriormente a estos valores les haremos una ajuste a la distribucion normal (obviamente el ajuste sera muy bueno), finalmente se describe un ejemplo en donde el ajuste de distribución es utilizado para evaluar un proyecto en terminos del VAN."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0d3ea5d",
   "metadata": {},
   "source": [
    "**Importar librerias**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "da4d6dd0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy.stats as stats\n",
    "import math"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8591fee3",
   "metadata": {},
   "source": [
    "**Generar numeros aleatorios que siguen una distribucion normal**\n",
    "\n",
    "Le asignamos a modo de ejemplo:\n",
    "* Media = 3\n",
    "* Desviacion estandar = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "dbefb16a",
   "metadata": {},
   "outputs": [],
   "source": [
    "numbers = np.random.normal(size=4000, loc=3,scale=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "41cb788d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize = (6,6))\n",
    "ax.hist(numbers,density=True,bins=40, color = 'gray', edgecolor = 'black')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a888c1b",
   "metadata": {},
   "source": [
    "**Ajuste de distribución**\n",
    "\n",
    "Haremos un ajuste a la distribucion normal, obviamente el ajuste sera muy bueno debido a que los datos de ejemplo generados se distribuyen de forma normal."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "4322d95a",
   "metadata": {},
   "outputs": [],
   "source": [
    "media, desviacion = stats.norm.fit(numbers)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "d84e4a78",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parametros del ajuste\n",
      "media:  2.978776388356674 \n",
      "Sts:  1.0040126307883523\n"
     ]
    }
   ],
   "source": [
    "print(\"Parametros del ajuste\")\n",
    "print('media: ',media,'\\nSts: ',desviacion)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45d15ab2",
   "metadata": {},
   "source": [
    "Nos dio una media muy cercana a 3 y desviacion cercana a 1, estos valores corresponden a los parametros inciales.\n",
    "\n",
    "**Ahora graficaremos la *pdf* ajustada a los datos**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "8549f037",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "dominio = np.linspace(np.min(numbers),np.max(numbers))\n",
    "\n",
    "fig, ax = plt.subplots(figsize = (6,6))\n",
    "ax.plot(dominio, stats.norm.pdf(dominio,media,desviacion), c='red', linewidth = 2)\n",
    "ax.hist(numbers,density=True,bins=40, color = 'gray', edgecolor = 'black')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa522d8c",
   "metadata": {},
   "source": [
    "**Ejemplo de aplicación**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a9b5dfe3",
   "metadata": {},
   "source": [
    "Para evaluar el VAN de un proyecto yo tengo distintos *inputs* para mi flujo de caja, costos unitarios, precios de venta de un producto, etc.\n",
    "\n",
    "Estos costos y precios pueden variar a lo largo del tiempo, entonces segun datos historicos o algun estudio yo puedo ajustar una distribucion de probabilidad (Ej: Distribucion Normal) a estos datos, de esta forma yo no evaluare el VAN de mi proyecto con un solo valor de precios o costos, sino que con una distribucion de valores de precios y costos, esto me dara muchos resultados de VAN, de esta forma puedo analizar el riego o los distintos escenarios de mi proyecto. (*Simulación de Monte Carlo*)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
